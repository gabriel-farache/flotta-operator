---
name: "KinD"
on:  # yamllint disable-line rule:truthy
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  kind:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.1"
      - name: Testing on KinD
        run: |
          export GO111MODULE=on
          export PATH=$PATH:$(go env GOPATH)/bin
          # Print cluster info
          kubectl cluster-info
          kubectl get pods -n kube-system
          kubectl wait --for=condition=Ready pods --all -n kube-system

          # Deploy flotta operator
          sed -i 's/LOG_LEVEL=info/LOG_LEVEL=debug/g' config/manager/controller_manager_config.properties
          make build
          IMG=flotta-operator:latest make docker-build
          kind load docker-image flotta-operator:latest
          timeout 2m make deploy IMG=flotta-operator TARGET=kind || retVal=$?
          if [ $retVal -ne 124 ]; then
            echo "Make run failed"; exit 1
          fi
          kubectl wait --timeout=120s --for=condition=Ready pods --all -n flotta
          # TODO: add ingress resource to config/kind/kustomization.yaml instead of port forwarding
          kubectl port-forward deploy/flotta-operator-controller-manager -n flotta --address 0.0.0.0 8888:8888 &
          kubectl port-forward deploy/flotta-operator-controller-manager -n flotta --address 0.0.0.0 8043:8043 &

          # Run test
          make integration-test

      # collect logs always just in case the test fails
      - name: Collect all logs
        if: always()
        run: |
          # Just dump the secrets to debug later
          kubectl get secrets -n flotta -o json
          kind export logs dist

      - name: Archive logs
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: logs
          path: |
            dist
